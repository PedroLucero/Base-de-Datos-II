CREATE OR REPLACE FUNCTION CALCULAR_INTERES(MONTO NUMBER, TASA NUMBER)
    RETURN NUMBER
    IS
    BEGIN
    RETURN MONTO * TASA/100;
END CALCULAR_INTERES;
/

CREATE OR REPLACE PROCEDURE RESULTADO_DE_PAGOS(
    p_COD_SUCURSAL IN OUT TRANSACPAGOS.COD_SUCURSAL%TYPE,
    p_ID_CLIENTE IN OUT TRANSACPAGOS.ID_CLIENTE%TYPE,
    p_ID_TIPO_PRESTAMO IN OUT TRANSACPAGOS.ID_TIPO_PRESTAMO%TYPE,
    p_PAGO IN OUT TRANSACPAGOS.MONTO_DEL_PAGO%TYPE,
    p_MONTO IN OUT PRESTAMO_CLIENTE.MONTO%TYPE,
    p_TASA IN OUT TIPO_PRESTAMO.TASA%TYPE,
    p_INTERES OUT NUMBER,
    p_FILA_TRANSAC OUT TRANSACPAGOS%ROWTYPE) IS

    CURSOR C_DATOS_TRANSAC IS
    SELECT COD_SUCURSAL, ID_CLIENTE, ID_TIPO_PRESTAMO, MONTO_DEL_PAGO
    FROM TRANSACPAGOS;

BEGIN
    FOR p_FILA_TRANSAC IN C_DATOS_TRANSAC
    LOOP
        p_COD_SUCURSAL := p_FILA_TRANSAC.COD_SUCURSAL;
        p_ID_CLIENTE := p_FILA_TRANSAC.ID_CLIENTE;
        p_ID_TIPO_PRESTAMO := p_FILA_TRANSAC.ID_TIPO_PRESTAMO;
        p_PAGO := p_FILA_TRANSAC.MONTO_DEL_PAGO;

        -- conseguir el monto del préstamo
        SELECT MONTO - MONTO_PAGADO INTO p_MONTO
        FROM PRESTAMO_CLIENTE P
        WHERE p_ID_CLIENTE = P.ID_CLIENTE AND p_ID_TIPO_PRESTAMO = P.ID_TIPO_PRESTAMO;

        -- conseguir tasa
        SELECT TASA INTO p_TASA
        FROM TIPO_PRESTAMO T
        WHERE p_ID_TIPO_PRESTAMO = T.ID_TIPO_PRESTAMO;

        p_INTERES := CALCULAR_INTERES(p_MONTO, p_TASA);

        -- restar el interés del pago o viceversa si es menor
        IF p_PAGO >= p_INTERES THEN
            p_PAGO := p_PAGO - p_INTERES;
            p_INTERES := 0;
        ELSE
            p_INTERES := p_INTERES - p_PAGO;
            p_PAGO := 0;
        END IF;
        
        UPDATE PRESTAMO_CLIENTE P
            SET MONTO = MONTO + p_INTERES, MONTO_PAGADO = MONTO_PAGADO + p_PAGO
        WHERE p_ID_CLIENTE = P.ID_CLIENTE AND p_ID_TIPO_PRESTAMO = P.ID_TIPO_PRESTAMO;

        UPDATE SUCURSAL S
            SET MONTOPRESTAMOS = MONTOPRESTAMOS + p_INTERES - p_PAGO
        WHERE p_COD_SUCURSAL = S.COD_SUCURSAL;
    END LOOP;

    -- EXCEPTION
    COMMIT;
    END RESULTADO_DE_PAGOS;
/


/*BLOQUE ANONIMO PARA PROBAR EL PROCEDIMIENTO*/

DECLARE
    v_COD_SUCURSAL NUMBER := 1; -- Codigo de sucursal
    v_ID_CLIENTE NUMBER := 1; -- Cliente con ID 1
    v_ID_TIPO_PRESTAMO NUMBER :=1 ;-- Tipo de Prestamo 1
    v_PAGO NUMBER(15,2):= 1200.4; -- Monto del préstamo
    v_MONTO NUMBER(10,2) := 10000; -- Monto del cliente
    v_TASA NUMBER(3,2) := 9.25; -- Tasa del Prestamo
BEGIN
    RESULTADO_DE_PAGOS(
        p_COD_SUCURSAL=> v_COD_SUCURSAL,
        p_ID_CLIENTE => v_ID_CLIENTE,
        p_ID_TIPO_PRESTAMO => v_ID_TIPO_PRESTAMO,
        p_PAGO => v_PAGO,
        p_MONTO => v_MONTO,
        p_TASA => v_TASA
    );
    DBMS_OUTPUT.PUT_LINE('Datos insertado correctamente');
END;