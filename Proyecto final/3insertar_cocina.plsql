CREATE OR REPLACE PROCEDURE INSERTAR_COCINA(
    p_NUMSERIE COCINA.NUMSERIE%TYPE,
    p_INSTOCK COCINA.INSTOCK%TYPE,
    p_NOMBRE COCINA.NOMBRE%TYPE,
    p_PRECIO COCINA.PRECIO%TYPE,
    p_MUEBLES SYS.ODCINUMBERLIST,
    p_CANTIDADES SYS.ODCINUMBERLIST
) IS 
TEMP_ID NUMBER;
BEGIN
    IF p_MUEBLES.COUNT != p_CANTIDADES.COUNT THEN -- revision de buenos arreglos para inserts
        RAISE_APPLICATION_ERROR(-20001, 'Los muebles y sus cantidades no concuerdan');
    END IF;
    INSERT INTO COCINA(ID, NUMSERIE, INSTOCK, NOMBRE, PRECIO, NUMMUEBLES)
    VALUES(SEQ_PRODUCTO.NEXTVAL, p_NUMSERIE, p_INSTOCK, p_NOMBRE, p_PRECIO, 0);

    FOR i IN 1..p_MUEBLES.COUNT LOOP -- loopeamos para insertar todo lo comprado
        INSERT INTO MUEBLEENCOCINA(ID_MUEBLE, ID_COCINA, CANTIDAD)
        VALUES (p_MUEBLES(i), SEQ_PRODUCTO.CURRVAL, p_CANTIDADES(i));

        TEMP_ID := SEQ_PRODUCTO.CURRVAL;
        UPDATE COCINA -- añadimos la cantidad de muebles apropiadamente
        SET NUMMUEBLES = NUMMUEBLES + p_CANTIDADES(i)
        WHERE ID = TEMP_ID;
    END LOOP;

    COMMIT;
EXCEPTION
-- añadir excp cuando mueble no existe
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE('Hubo un error al crear la cocina');
END;
/

-- Prueba
DECLARE
    v_NUMSERIE COCINA.NUMSERIE%TYPE;
    v_INSTOCK COCINA.INSTOCK%TYPE;
    v_NOMBRE COCINA.NOMBRE%TYPE;
    v_PRECIO COCINA.PRECIO%TYPE;
    v_MUEBLES SYS.ODCINUMBERLIST;
    v_CANTIDADES SYS.ODCINUMBERLIST;
BEGIN
    v_NUMSERIE := 10101;
    v_INSTOCK := 10;
    v_NOMBRE := 'Dorcy';
    v_PRECIO := 1200;
    v_MUEBLES := SYS.ODCINUMBERLIST(2, 3, 4);
    v_CANTIDADES := SYS.ODCINUMBERLIST(1, 2, 1);
    
    INSERTAR_COCINA(v_NUMSERIE, v_INSTOCK, v_NOMBRE, v_PRECIO, v_MUEBLES, v_CANTIDADES);

    v_NUMSERIE := 20202;
    v_INSTOCK := 20;
    v_NOMBRE := 'Lauretta';
    v_PRECIO := 1250;
    v_MUEBLES := SYS.ODCINUMBERLIST(1, 5);
    v_CANTIDADES := SYS.ODCINUMBERLIST(5, 1);
    
    INSERTAR_COCINA(v_NUMSERIE, v_INSTOCK, v_NOMBRE, v_PRECIO, v_MUEBLES, v_CANTIDADES);
END;
/